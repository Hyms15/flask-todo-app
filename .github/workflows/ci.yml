name: Flask CI Pipeline

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run unit tests
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          python -m pytest tests/unit --disable-warnings -q

  integration-test:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run integration tests
        env:
          PYTHONPATH: ${{ github.workspace }}
          FLASK_SECRET_KEY: ${{ secrets.FLASK_SECRET_KEY }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: |
          python -m pytest tests/integration --disable-warnings -q

  docker-lint:
    runs-on: ubuntu-latest
    needs: [build-test, integration-test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Lint Dockerfile with Hadolint
        uses: hadolint/hadolint-action@v2
        with:
          dockerfile: Dockerfile

  # OPTIONAL: build the Docker image after lint & tests
  docker-build:
    if: always()  # change to "success()" if you want to skip build when earlier jobs fail
    runs-on: ubuntu-latest
    needs: [build-test, integration-test, docker-lint]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image (no push)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          tags: ${{ github.repository }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # ------- To push to Docker Hub, uncomment the two steps below -------
      # - name: Log in to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}
      #
      # - name: Build and push
      #   uses: docker/build-push-action@v6
      #   with:
      #     context: .
      #     push: true
      #     tags: ${{ secrets.DOCKERHUB_USERNAME }}/flask-todo-app:${{ github.sha }}

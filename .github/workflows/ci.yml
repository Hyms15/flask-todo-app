name: Flask CI Pipeline

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
   
      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run unit tests
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: python -m pytest tests/unit --disable-warnings -q

  integration-test:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run integration tests
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: python -m pytest tests/integration --disable-warnings -q
      - name: Store pipeline secrets securely
        env:
         FLASK_SECRET_KEY: ${{ secrets.FLASK_SECRET_KEY }}
         DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: |
         echo "Secrets have been securely accessed for pipeline use."
         # Example usage:
         # python app.py --config production

         

